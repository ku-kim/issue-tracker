name: BE Spring-Boot Deploy

on:
  push:
    branches:
      - BE-deploy

# https://github.blog/changelog/2021-04-20-github-actions-control-permissions-for-github_token/
permissions:
  contents: read

jobs:
  react:
    name: Spring build & deploy
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./be

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"
          cache: gradle

      # https://github.com/actions/cache/blob/main/examples.md#java---gradle
      - name: Use gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test and Build with Gradle
        run: ./gradlew clean build

      - name: Make zip file
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash        

      # aws user 연결
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1 
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }} 
          aws-region: ap-northeast-2

      # react 빌드한 /build를 s3로 업로드
      - name: Upload gradle project to S3
        env: 
          PROJECT_NAME: issue-tracker
          BE_BUCKET_NAME: ${{ secrets.AWS_S3_BE_BUCKET_NAME}}
        run: aws s3 cp ./$GITHUB_SHA.zip s3://$BE_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: CodeDeploy
        env: 
          CODEDEPOLY_APPLICATION_NAME: Team-35-BE-CodeDepoly
          BE_BUCKET_NAME: ${{ secrets.AWS_S3_BE_BUCKET_NAME}}
          PROJECT_NAME: issue-tracker
          DEPLOY_GROUP: Team-35
          DEPLOY_CONFIG: CodeDeployDefault.AllAtOnce
        run: aws deploy create-deployment --application-name $CODEDEPOLY_APPLICATION_NAME --deployment-config-name $DEPLOY_CONFIG --deployment-group-name $DEPLOY_GROUP --s3-location bucket=$BE_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
      
      # 참고 : https://fe-developers.kakaoent.com/2022/220106-github-actions/
      - name: Slack notification
        if: ${{ always() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
            if [ "${{ job.status }}" = "success" ]; then
              EMOTICON="✅"
            else
              EMOTICON="⛔"
            fi

            MSG="{ \"text\":\">${EMOTICON} workflow (<https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}|${GITHUB_WORKFLOW}>) in <https://github.com/${GITHUB_REPOSITORY}|${GITHUB_REPOSITORY}>\n><https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}/checks|${GITHUB_JOB}> job ${{ inputs.status }}, branch=\`${GITHUB_REF#refs/heads/}\`\"}"

            curl -X POST -H 'Content-type: application/json' --data "${MSG}" "${SLACK_WEBHOOK}"
